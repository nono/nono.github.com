<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on M&#39;enfin ?!?</title>
    <link>http://blog.menfin.info/categories/git/</link>
    <description>Recent content in Git on M&#39;enfin ?!?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Fri, 20 Mar 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://blog.menfin.info/categories/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ma config</title>
      <link>http://blog.menfin.info/posts/2015-03-20-ma-config/</link>
      <pubDate>Fri, 20 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.menfin.info/posts/2015-03-20-ma-config/</guid>
      <description>&lt;p&gt;Je suis un utilisateur de longue date de la ligne de commande, et de vim en
particulier. J&amp;rsquo;essaye d&amp;rsquo;apprendre régulièrement de nouvelles choses (méthodes,
outils, astuces) pour m&amp;rsquo;améliorer et être plus efficace. Par exemple, j&amp;rsquo;ai
écrit par le passé un billet sur &lt;a href=&#34;http://blog.menfin.info/posts/2008-03-15-git-branch-dans-le-prompt-zsh/&#34;&gt;l&amp;rsquo;ajout de la branche git dans le prompt de
zsh&lt;/a&gt;.
Je souhaite partager avec vous quelques découvertes récentes.&lt;/p&gt;

&lt;p&gt;Tout d&amp;rsquo;abord, je suis passé de vim à &lt;a href=&#34;http://neovim.org/&#34;&gt;Neovim&lt;/a&gt;. Il n&amp;rsquo;y a
quasiment aucune différence d&amp;rsquo;un point de vue utilisateur, et c&amp;rsquo;est très bien
ainsi ! C&amp;rsquo;est très stable et un utilisateur de vim sera comme chez lui.
D&amp;rsquo;ailleurs, mes fichiers de config sont les mêmes pour vim et neovim, ce sont
juste des liens symboliques de l&amp;rsquo;un vers l&amp;rsquo;autre.&lt;/p&gt;

&lt;p&gt;Alors, pourquoi changer ? En fait, sous le capot, il y a pas mal de
changements qui vont porter leurs fruits plus tard. La base de code a été
nettoyé de pas mal de bizarreries (pour cause de compatibilité avec des
terminaux que plus personne n&amp;rsquo;utilise). Il y a un gros travail sur les
plugins : ils peuvent être exécutés à l&amp;rsquo;extérieur du processus principal et
communiquer avec lui via msgpack. Ainsi, ils peuvent être écrits dans
différents langages et faire des traitements longs (analyse de code), sans
bloquer l&amp;rsquo;affichage pendant plusieurs secondes.
&lt;a href=&#34;https://github.com/benekastah/neomake&#34;&gt;neomake&lt;/a&gt; est un bel exemple
d&amp;rsquo;utilisation des possibilités de Neovim. Bref, je suis passé à Neovim surtout
pour montrer mon soutien à ce projet, car je pense qu&amp;rsquo;il va faire avancer vim
dans le bon sens.&lt;/p&gt;

&lt;p&gt;Pour le shell, je continue d&amp;rsquo;utiliser zsh plutôt que bash. J&amp;rsquo;avoue ne pas trop
savoir comment a évolué bash ces dernières années, mais je n&amp;rsquo;ai rien lu qui me
donne envie d&amp;rsquo;y revenir. À l&amp;rsquo;époque où j&amp;rsquo;avais fait le changement, il y avait
pas mal de choses intéressantes sous zsh (la complétion bien plus efficace,
&lt;code&gt;**&lt;/code&gt; pour le globbing ou encore la recherche dans l&amp;rsquo;historique dès que
j&amp;rsquo;appuie sur &lt;code&gt;↑&lt;/code&gt;). Mais j&amp;rsquo;y reste car zsh me convient bien, même si parfois je
me dis que des alternatives comme &lt;a href=&#34;http://fishshell.com/&#34;&gt;fish&lt;/a&gt; pourraient
être intéressantes.&lt;/p&gt;

&lt;p&gt;Ce shell tourne dans rxvt-unicode. Rien de nouveau de ce côté-là. Pour les
couleurs, j&amp;rsquo;utilise maintenant le thème &lt;a href=&#34;http://chriskempson.github.io/base16/#bright&#34;&gt;base16
bright&lt;/a&gt;. Base16 est pratique et
permet d&amp;rsquo;avoir le même jeu de couleurs dans pas mal d&amp;rsquo;applications. On trouve
des thèmes pour l&amp;rsquo;utiliser dans le shell, vim, etc. Il n&amp;rsquo;y a que pour irssi où
cela a été un peu difficile. J&amp;rsquo;ai testé quelques thèmes mais aucun n&amp;rsquo;allait
bien. Du coup, j&amp;rsquo;ai écrit mon propre thème :
&lt;a href=&#34;https://github.com/nono/dotfiles/blob/master/irssi/base16.theme&#34;&gt;base16&lt;/a&gt;
(oui, j&amp;rsquo;aurais pu faire plus original).&lt;/p&gt;

&lt;p&gt;Et pour la police, j&amp;rsquo;utilise Droid sans mono, &lt;a href=&#34;https://github.com/powerline/fonts&#34;&gt;patchée pour
powerline&lt;/a&gt;. Je n&amp;rsquo;utilise pas powerline
mais &lt;a href=&#34;https://github.com/bling/vim-airline&#34;&gt;vim-airline&lt;/a&gt;, et ces symboles me
servent aussi pour irssi.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;en ai également profité pour changer de prompt dans zsh. Je suis parti de
&lt;a href=&#34;https://github.com/sindresorhus/pure&#34;&gt;pure&lt;/a&gt; et je l&amp;rsquo;ai modifié pour qu&amp;rsquo;il
tienne sur une seule ligne (&lt;a href=&#34;https://github.com/nono/dotfiles/blob/master/zsh/functions/prompt_unpure_setup&#34;&gt;prompt_unpure_setup
&lt;/a&gt;
si ça vous intéresse).&lt;/p&gt;

&lt;p&gt;Un autre truc que j&amp;rsquo;ai ajouté récemment dans mon fichier &lt;code&gt;~/.zshrc&lt;/code&gt; est la
coloration des pages man :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;man() {
  env LESS_TERMCAP_mb=$&#39;\E[01;31m&#39; \
  LESS_TERMCAP_md=$&#39;\E[01;38;5;74m&#39; \
  LESS_TERMCAP_me=$&#39;\E[0m&#39; \
  LESS_TERMCAP_se=$&#39;\E[0m&#39; \
  LESS_TERMCAP_so=$&#39;\E[38;5;246m&#39; \
  LESS_TERMCAP_ue=$&#39;\E[0m&#39; \
  LESS_TERMCAP_us=$&#39;\E[04;38;5;146m&#39; \
  man &amp;quot;$@&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ce n&amp;rsquo;est pas grand chose, mais ça peut être pratique. Voilà, j&amp;rsquo;espère que cela
pourra inspirer certains d&amp;rsquo;entre vous. Et n&amp;rsquo;oubliez pas que ma config traine
sur &lt;a href=&#34;https://github.com/nono/dotfiles&#34;&gt;github.com/nono/dotfiles&lt;/a&gt;. Il n&amp;rsquo;y a pas
forcément beaucoup de commentaires, mais on peut y trouver des choses utiles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Afficher la branche Git courante dans le prompt de ZSH</title>
      <link>http://blog.menfin.info/posts/2008-03-15-git-branch-dans-le-prompt-zsh/</link>
      <pubDate>Sat, 15 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>http://blog.menfin.info/posts/2008-03-15-git-branch-dans-le-prompt-zsh/</guid>
      <description>&lt;p&gt;Je suis tombé sur un tips bien sympa :
&lt;a href=&#34;http://www.simplisticcomplexity.com/2008/03/13/show-your-git-branch-name-in-your-prompt/&#34;&gt;Show Your GIT Branch Name In Your Prompt&lt;/a&gt;.
Il y est expliqué comment avoir la branche &lt;a href=&#34;http://git.or.cz/&#34;&gt;Git&lt;/a&gt; en cours dans son prompt avec &lt;a href=&#34;http://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;J&amp;rsquo;ai adapaté ca pour &lt;a href=&#34;http://www.zsh.org/&#34;&gt;zsh&lt;/a&gt;. Voici un extrait de mon &lt;code&gt;zshrc&lt;/code&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PS1=&#39;%~ $(git_branch)%# &#39;

function git_branch {
  git branch --no-color 2&amp;gt; /dev/null | sed -e &#39;/^[^*]/d&#39; -e &#39;s/* \(.*\)/(\1) /&#39;
}

setopt PROMPT_SUBST
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La seule difficulté fût de se rendre compte qu&amp;rsquo;il fallait activer une option pour que ca marche, et de savoir quelle était cette option (&lt;code&gt;PROMPT_SUBST&lt;/code&gt; en l&amp;rsquo;occurence).&lt;/p&gt;

&lt;p&gt;Ainsi que je suis sous un répertoire normal, j&amp;rsquo;ai un prompt de la forme &lt;code&gt;~/Desktop %&lt;/code&gt;, et quand je suis dans un répertoire versionné sous Git, ca donne : &lt;code&gt;~/mon_projet (ma_branche) %&lt;/code&gt;.
Ce n&amp;rsquo;est pas grand chose, mais comme il paraît que c&amp;rsquo;est une bonne pratique de faire des branches sous Git, autant avoir en permance le nom de la branche courante sous les yeux.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; : j&amp;rsquo;ai des invitations pour &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; si ca intéresse des gens.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>